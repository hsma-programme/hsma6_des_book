{
  "hash": "67901b0c606d87c19c82b3e91dadf9b6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nauthor:\n  - name: Sammi Rosser\n    orcid: 0000-0002-9552-8988\n    url: 'https://github.com/Bergam0t'\n  - name: Dan Chalk\n    orcid: 0000-0002-4165-4364\n    url: 'https://github.com/hsma-chief-elf'\nexecute:\n  eval: false\n---\n\n# Creating Web Apps {#sec-apps}\n\nAs part of the HSMA programme, we teach how to use the Streamlit web application framework to produce a front-end for a discrete event simulation model.\n\nThis can be a hugely powerful way of distributing your model. By creating a web application, stakeholders can interact with the model and adjust parameters themselves, seeing the impact this has. A carefully designed web app can guide them through the process of understanding the impact of different changes to the system.\n\nIt is beyond the scope of this book to give a full treatment of this topic at this time, though it may be expanded on in the future.\n\nIn the meantime, there are several resources available to you.\n\n## Video guide: creating a streamlit web app interface for a DES model\n\nThis video is the masterclass on Streamlit interfaces from the fifth round of the HSMA programme. This is delivered by [Tom Monks](https://github.com/TomMonks) [![ORCID ID](images/orcid.png)](https://orcid.org/0000-0003-2631-4481), another member of the PenCHORD team.\n\n\n{{< video https://youtu.be/6e0OPsjRYQ8?si=YxA80wwKm5J-UjAb >}}\n\n\n\nThe classes and structure used for the model are very slightly different to the style used in this book, but overall the techniques are very applicable.\n\n### Book\n\nA book has also been written to accompany the above tutorial.\n\nThe book can be accessed [here](https://health-data-science-or.github.io/simpy-streamlit-tutorial/content/03_streamlit/01_intro.html).\n\n## Example apps\n\n### The DES playground\n\nThe following app contains a range of pages that allow users to explore a DES model of growing complexity.\n\nYou can see the range of sliders and inputs that you can make available to your end users.\n\n\n```{=html}\n<iframe width=\"780\" height=\"720\" src=\"https://hsma-programme.github.io/Teaching_DES_Concepts_Streamlit/\" title=\"DES Streamlit example 1\"></iframe>\n```\n\n\n:::{.callout-warning}\nNote that this link will not work if you are viewing this book in Firefox. All other major browsers should work, including mobile browsers.\n:::\n\nThe full code can be seen [here](https://github.com/hsma-programme/Teaching_DES_Concepts_Streamlit).\n\nLook at the code within the **pages** subfolder to see how different features are implemented.\n\nOther features that may be useful to adapt for your own use include\n- the ability to save and compare the results from multiple scenarios\n- a range of interactive visualisations of simulation metrics\n\n### The HSMA SimPy example library\n\nAs part of the SimPy visualisation library project, a range of different SimPy models have been created with a Streamlit frontend.\n\n\n```{=html}\n<iframe width=\"780\" height=\"720\" src=\"https://simpy-visualisation.streamlit.app/?embedded=true\" title=\"DES Streamlit example 2\"></iframe>\n```\n\n\nThe code for all of these examples can be explored in this [Github Repository](https://github.com/Bergam0t/simpy_visualisation).\n\nIn each case, the code for the model classes, simulation execution and simulation summary functions can be found inside a subfolder within the **examples** folder.\n\nNote that again the classes and format used for these models differs slightly from the examples given in this book, but are fundamentally very similar so should be possible to adapt.\n\n",
    "supporting": [
      "intro_creating_web_apps_files"
    ],
    "filters": [],
    "includes": {}
  }
}